\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{pl-syntax}
  [2019/04/22 version 2.1.0 Abstract Syntax Definitions for Programming Languages]

\RequirePackage{environ}
\RequirePackage{etoolbox}
\RequirePackage{mathtools}

% Suppresses row breaks when set to true. Used to prevent unnecessary
% line breaks that would otherwise be generated by default.
\newtoggle{@pl@syntax@suppressNewRow}

% Suppresses the alternative separator when set to true. Used before the
% very first alternative.
\newtoggle{@pl@syntax@suppressAlt}

% Suppresses column separators when set to true. Set after the first
% alternative on a row.
\newtoggle{@pl@syntax@suppressColumns}

% The symbol used between a category name and its definition.
\newcommand{\@pl@syntax@eqSymbol}{\Coloneqq}

% The symbol used between alternatives.
\newcommand{\@pl@syntax@altSymbol}{\,\mid\,}

% Start a new row.
\newcommand{\@pl@syntax@newRow}{%
  \iftoggle{@pl@syntax@suppressNewRow}%
    {\global\togglefalse{@pl@syntax@suppressNewRow}}%
    {\\}%
}

% Generate an alternative symbol unless this is the first alternative.
\newcommand{\@pl@syntax@alt}{%
  \iftoggle{@pl@syntax@suppressColumns}%
    {}%
    {& &}%
  \iftoggle{@pl@syntax@suppressAlt}%
    {\togglefalse{@pl@syntax@suppressAlt}}%
    {\@pl@syntax@altSymbol}%
  \iftoggle{@pl@syntax@suppressColumns}%
    {}%
    {%
      &%
      \toggletrue{@pl@syntax@suppressColumns}%
    }%
}

% Declare a command whether or not it is already declared.
\newcommand*{\@pl@syntax@newcommand}{%
  \@star@or@long\@pl@syntax@new@command%
}
\newcommand*{\@pl@syntax@new@command}[1]{%
  \provide@command{#1}{}%
  \renew@command{#1}%
}

% Define the abstract syntax of a programming language.
\NewEnviron{syntax}{%
  % Define a new syntactic category (e.g. expressions, statements).
  \@pl@syntax@newcommand{\category}[2][]{%
    \@pl@syntax@newRow \textrm{##1} & ##2 & \@pl@syntax@eqSymbol &%
    \toggletrue{@pl@syntax@suppressAlt}%
    \toggletrue{@pl@syntax@suppressColumns}%
  }%
  % A category with no right-hand side. This allows you to name meta
  % variables without defining the syntactic category explicitly.
  \@pl@syntax@newcommand{\abstractCategory}[2][]{%
    \@pl@syntax@newRow \textrm{##1} & ##2%
  }%
  % A category where the right-hand side is an abstract set.
  \@pl@syntax@newcommand{\categoryFromSet}[3][]{%
    \@pl@syntax@newRow \textrm{##1} & ##2 & \in & ##3%
  }%
  % Define a new alternative for the most recent category.
  \@pl@syntax@newcommand{\alternative}[1]{%
    \@pl@syntax@alt ##1%
  }%
  % Add extra information to the most recently declared alternative.
  % For example, you can use this to note that the context is unordered.
  \@pl@syntax@newcommand{\note}[1]{\@pl@syntax@newRow & & & (\textrm{##1})}%
  % Add vertical space between declarations.
  \@pl@syntax@newcommand{\separate}[1][1ex]{%
    \global\toggletrue{@pl@syntax@suppressNewRow}\\[##1]%
  }%
  % Group categories or alternatives on a new line and align left.
  \@pl@syntax@newcommand{\groupleft}[1]{%
    % This doesn't work because \multiline expects an empty line.
    % \@pl@syntax@newRow%
    % So we have to duplicate some code.
    \iftoggle{@pl@syntax@suppressNewRow}{}{\\}%
    \multicolumn{4}{@{}l@{}}{%
      \global\togglefalse{@pl@syntax@suppressNewRow}
      \renewcommand{\@pl@syntax@alt}{\@pl@syntax@grouped@alt}%
      \renewcommand{\category}{\@pl@syntax@grouped@category}%
      \renewcommand{\abstractCategory}{\@pl@syntax@grouped@abstractCategory}%
      \renewcommand{\categoryFromSet}{\@pl@syntax@grouped@categoryFromSet}%
      ##1%
    }%
  }%
%
  \global\toggletrue{@pl@syntax@suppressNewRow}%
  \[\begin{array}{@{}llcl@{}}\BODY\end{array}\]%
}

\newcommand{\@pl@syntax@grouped@alt}{%
  \iftoggle{@pl@syntax@suppressColumns}{}{\qquad}%
  \iftoggle{@pl@syntax@suppressAlt}%
    {\togglefalse{@pl@syntax@suppressAlt}}%
    {\@pl@syntax@altSymbol}%
  \toggletrue{@pl@syntax@suppressColumns}%
}

\newcommand{\@pl@syntax@grouped@category}[2][]{%
  \textrm{#1 } #2 \@pl@syntax@eqSymbol%
  \toggletrue{@pl@syntax@suppressAlt}%
  \toggletrue{@pl@syntax@suppressColumns}%
}

\newcommand{\@pl@syntax@grouped@abstractCategory}[2][]{%
  \textrm{#1 } #2%
}

\newcommand{\@pl@syntax@grouped@categoryFromSet}[3][]{%
  \textrm{#1 } #2 \in #3%
}
